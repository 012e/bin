#!/usr/bin/env python
from colorama import Fore, Style
import argparse
import subprocess
import time
import sys

parser = argparse.ArgumentParser(
    prog="Pretty command runner", description="Decorate your command"
)
parser.add_argument("command")
parser.add_argument("-n", "--notify", action="store_true")
parser.add_argument("-s", "--silent", action="store_true")
args = parser.parse_args()


def handle_notify(title: str, msg: str):
    if args.notify:
        subprocess.run(["notify-send", "--expire-time", "3000", title, msg])


print(f"{Fore.GREEN}Running command `{Fore.BLUE}{args.command}{Fore.GREEN}`{Style.RESET_ALL}")
handle_notify("Command runner", f"Running command `{args.command}`")
start_time = time.time()
process = subprocess.run(
    ["bash", "-c", args.command], stdout=sys.stdout, stderr=sys.stderr
)
total_time = round(time.time() - start_time)
err_code = process.returncode
if err_code == 0:
    handle_notify("Command runner", f"`{args.command}` ran successfully.'")
    print(f"{Fore.GREEN}Command `{Fore.BLUE}{args.command}{Fore.GREEN}` ran successfully in {total_time}s.{Style.RESET_ALL}")
else:
    handle_notify(
        "Command runner", f"`{args.command}` failed with error code {err_code}."
    )
    print(
        f"{Fore.RED}Command `{Fore.BLUE}{args.command}{Fore.RED}` failed with error code {err_code}, took {total_time}s.{Style.RESET_ALL}"
    )
input()
